1 - Calls(_, _)
constant c;
Select c such that Calls(_, _)
0,1
5000
2 - Calls(computeCentroid, _)
constant c;
Select c such that Calls("computeCentroid", _)
0,1
5000
3 - Calls(s, _) - error
stmt s;
Select s such that Calls(s, _)

5000
4 - Calls(pn, _) - error
print pn;
Select pn such that Calls(pn, _)

5000
5 - Calls(r, _) - error
read r;
Select r such that Calls(r, _)

5000
6 - Calls(a, _) - error
assign a;
Select a such that Calls(a, _)

5000
7 - Calls(ifs, _) - error
if ifs;
Select ifs such that Calls(ifs, _)

5000
8 - Calls(w, _) - error
while w;
Select w such that Calls(w, _)

5000
9 - Calls(c, _) - error
call c;
Select c such that Calls(c, _)

5000
10 - Calls(v, _) - error
variable v;
Select v such that Calls(v, _)

5000
11 - Calls(c, _) - error
constant c;
Select c such that Calls(c, _)

5000
12 - Calls(proc, _)
procedure proc;
Select proc such that Calls(proc, _)
computeCentroid, main
5000
15 - Calls(_, computeCentroid)
constant c;
Select c such that Calls(_, "computeCentroid")
0,1
5000
16 - Calls(_, s) - error
stmt s;
Select s such that Calls(_, s)

5000
17 - Calls(_, pn) - error
print pn;
Select pn such that Calls(_, pn)

5000
18 - Calls(_, r) - error
read r;
Select r such that Calls(_, r)

5000
19 - Calls(_, a) - error
assign a;
Select a such that Calls(_, a)

5000
20 - Calls(_, ifs) - error
if ifs;
Select ifs such that Calls(_, ifs)

5000
21 - Calls(_, w) - error
while w;
Select w such that Calls(_, w)

5000
22 - Calls(_, c) - error
call c;
Select c such that Calls(_, c)

5000
23 - Calls(_, v) - error
variable v;
Select v such that Calls(_, v)

5000
24 - Calls(_, c) - error
constant c;
Select c such that Calls(_, c)

5000
25 - Calls(_, proc)
procedure proc;
Select proc such that Calls(_, proc)
readPoint, printResults, computeCentroid
5000
26 - Calls(p, P) get p
procedure p, P;
Select p such that Calls(p, P)
main, computeCentroid
5000
27 - Calls(p, P) get P
procedure p, P;
Select P such that Calls(p, P)
readPoint, printResults, computeCentroid
5000
28 - Calls(computeCentroid, readPoint)
constant c;
Select c such that Calls("computeCentroid", "readPoint")
0,1
5000
29 - Calls(main, readPoint)
constant c;
Select c such that Calls("main", "readPoint")

5000
30 - Calls(main, p)
procedure p;
Select p such that Calls("main", p)
printResults, computeCentroid
5000
1 - Calls*(_, _)
constant c;
Select c such that Calls*(_, _)
0,1
5000
2 - Calls*(computeCentroid, _)
constant c;
Select c such that Calls*("computeCentroid", _)
0,1
5000
3 - Calls*(s, _) - error
stmt s;
Select s such that Calls*(s, _)

5000
4 - Calls*(pn, _) - error
print pn;
Select pn such that Calls*(pn, _)

5000
5 - Calls*(r, _) - error
read r;
Select r such that Calls*(r, _)

5000
6 - Calls*(a, _) - error
assign a;
Select a such that Calls*(a, _)

5000
7 - Calls*(ifs, _) - error
if ifs;
Select ifs such that Calls*(ifs, _)

5000
8 - Calls*(w, _) - error
while w;
Select w such that Calls*(w, _)

5000
9 - Calls*(c, _) - error
call c;
Select c such that Calls*(c, _)

5000
10 - Calls*(v, _) - error
variable v;
Select v such that Calls*(v, _)

5000
11 - Calls*(c, _) - error
constant c;
Select c such that Calls*(c, _)

5000
12 - Calls*(proc, _)
procedure proc;
Select proc such that Calls*(proc, _)
computeCentroid, main
5000
15 - Calls*(_, computeCentroid)
constant c;
Select c such that Calls*(_, "computeCentroid")
0,1
5000
16 - Calls*(_, s) - error
stmt s;
Select s such that Calls*(_, s)

5000
17 - Calls*(_, pn) - error
print pn;
Select pn such that Calls*(_, pn)

5000
18 - Calls*(_, r) - error
read r;
Select r such that Calls*(_, r)

5000
19 - Calls*(_, a) - error
assign a;
Select a such that Calls*(_, a)

5000
20 - Calls*(_, ifs) - error
if ifs;
Select ifs such that Calls*(_, ifs)

5000
21 - Calls*(_, w) - error
while w;
Select w such that Calls*(_, w)

5000
22 - Calls*(_, c) - error
call c;
Select c such that Calls*(_, c)

5000
23 - Calls*(_, v) - error
variable v;
Select v such that Calls*(_, v)

5000
24 - Calls*(_, c) - error
constant c;
Select c such that Calls*(_, c)

5000
25 - Calls*(_, proc)
procedure proc;
Select proc such that Calls*(_, proc)
readPoint, printResults, computeCentroid
5000
26 - Calls*(p, P) get p
procedure p, P;
Select p such that Calls*(p, P)
main, computeCentroid
5000
27 - Calls*(p, P) get P
procedure p, P;
Select P such that Calls*(p, P)
readPoint, printResults, computeCentroid
5000
28 - Calls*(computeCentroid, readPoint)
constant c;
Select c such that Calls*("computeCentroid", "readPoint")
0,1
5000
29 - Calls*(main, readPoint)
constant c;
Select c such that Calls*("main", "readPoint")
0,1
5000
30 - Calls*(main, p)
procedure p;
Select p such that Calls*("main", p)
readPoint, printResults, computeCentroid
5000
100 - ModifiesP(computeCentroid, v)
procedure p; variable v;
Select v such that Modifies("computeCentroid", v)
count, cenX, cenY, x, y, flag, normSq
5000
101 - ModifiesS(call, v)
procedure p; variable v;
Select v such that Modifies(13, v)
x, y
5000
103 - UsesP(main, v)
procedure p; variable v;
Select v such that Uses("main", v)
flag, cenX, cenY, normSq, count, x, y
5000
104 - UsesS(call, v)
procedure p; variable v;
Select v such that Uses(3, v)
flag, cenX, cenY, normSq
5000
201 - Pattern a (v, _) - select a
assign a; variable v;
Select a pattern a (v, _)
1, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23
5000
202 - Pattern a (v, _) - select v
assign a; variable v;
Select v pattern a (v, _)
count, cenX, cenY, flag, normSq
5000
203 - Pattern a (_, _)
assign a;
Select a pattern a (_, _)
1, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23
5000
204 - Pattern a (count, _)
assign a;
Select a pattern a ("count", _)
10, 15
5000
205 - Pattern ifs (v, _, _) - select ifs
if ifs; variable v;
Select ifs pattern ifs (v, _, _)
19
5000
206 - Pattern ifs (v, _, _) - select v
if ifs; variable v;
Select v pattern ifs (v, _, _)
count
5000
207 - Pattern ifs (_, _, _) - select v
if ifs;
Select ifs pattern ifs (_, _, _)
19
5000
208 - Pattern ifs (count, _, _) - select v
if ifs;
Select ifs pattern ifs ("count", _, _)
19
5000
209 - Pattern ifs (_, _x+1_, _) - select v
if ifs;
Select ifs pattern ifs (_, _"x+1"_, _)

5000
210 - Pattern ifs (_, _, _x+1_) - select v
if ifs;
Select ifs pattern ifs (_, _, _"x+1"_)

5000
211 - Pattern w (v, _) - select w
while w; variable v;
Select w pattern w (v, _)
14
5000
212 - Pattern w (v, _) - select v
while w; variable v;
Select v pattern w (v, _)
x, y
5000
213 - Pattern w (_, _) - select w
while w;
Select w pattern w (_, _)
14
5000
214 - Pattern w (x, _) - select w
while w;
Select w pattern w ("x", _)
14
5000
215 - Pattern w (y, _) - select w
while w;
Select w pattern w ("y", _)
14
5000
216 - Pattern w (y, _x+1_)
while w;
Select w pattern w ("y", _x+1_)

5000
217 - Select Boolean - true table expected

Select BOOLEAN such that Modifies(1, "flag")
TRUE
5000
218 - Select Boolean - false table expected

Select BOOLEAN such that Uses(8, "cenX")
FALSE
5000
219 - Select Boolean - empty table expected

Select BOOLEAN such that Calls("main", "readPoint")
FALSE
5000
220 - Select Boolean - non empty table expected
variable v;
Select BOOLEAN such that Uses("printResults", v)
TRUE
5000
221 - Select boolean - semantically invalid query 1
variable v;
Select BOOLEAN such that Uses(_, v)
FALSE
5000
222 - stmt boolean select boolean - should get statements instead of boolean
stmt BOOLEAN;
Select BOOLEAN
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
5000
223 - Select tuple - Semantically invalid
stmt s;
Select <BOOLEAN, s>
none
5000
224 - Select BOOLEAN in tuple - semantically invalid, empty result
    variable v  ;
 Select   < v , BOOLEAN >

5000
225 - Select BOOLEAN in tuple - semantically invalid, empty result
    variable v  ; stmt s;
 Select   < v , BOOLEAN ,s >

5000
226 - Multiple Tuple
stmt s1, s2; variable v;
Select <s1, s2>
1 1,1 10,1 11,1 12,1 13,1 14,1 15,1 16,1 17,1 18,1 19,1 2,1 20,1 21,1 22,1 23,1 3,1 4,1 5,1 6,1 7,1 8,1 9,10 1,10 10,10 11,10 12,10 13,10 14,10 15,10 16,10 17,10 18,10 19,10 2,10 20,10 21,10 22,10 23,10 3,10 4,10 5,10 6,10 7,10 8,10 9,11 1,11 10,11 11,11 12,11 13,11 14,11 15,11 16,11 17,11 18,11 19,11 2,11 20,11 21,11 22,11 23,11 3,11 4,11 5,11 6,11 7,11 8,11 9,12 1,12 10,12 11,12 12,12 13,12 14,12 15,12 16,12 17,12 18,12 19,12 2,12 20,12 21,12 22,12 23,12 3,12 4,12 5,12 6,12 7,12 8,12 9,13 1,13 10,13 11,13 12,13 13,13 14,13 15,13 16,13 17,13 18,13 19,13 2,13 20,13 21,13 22,13 23,13 3,13 4,13 5,13 6,13 7,13 8,13 9,14 1,14 10,14 11,14 12,14 13,14 14,14 15,14 16,14 17,14 18,14 19,14 2,14 20,14 21,14 22,14 23,14 3,14 4,14 5,14 6,14 7,14 8,14 9,15 1,15 10,15 11,15 12,15 13,15 14,15 15,15 16,15 17,15 18,15 19,15 2,15 20,15 21,15 22,15 23,15 3,15 4,15 5,15 6,15 7,15 8,15 9,16 1,16 10,16 11,16 12,16 13,16 14,16 15,16 16,16 17,16 18,16 19,16 2,16 20,16 21,16 22,16 23,16 3,16 4,16 5,16 6,16 7,16 8,16 9,17 1,17 10,17 11,17 12,17 13,17 14,17 15,17 16,17 17,17 18,17 19,17 2,17 20,17 21,17 22,17 23,17 3,17 4,17 5,17 6,17 7,17 8,17 9,18 1,18 10,18 11,18 12,18 13,18 14,18 15,18 16,18 17,18 18,18 19,18 2,18 20,18 21,18 22,18 23,18 3,18 4,18 5,18 6,18 7,18 8,18 9,19 1,19 10,19 11,19 12,19 13,19 14,19 15,19 16,19 17,19 18,19 19,19 2,19 20,19 21,19 22,19 23,19 3,19 4,19 5,19 6,19 7,19 8,19 9,2 1,2 10,2 11,2 12,2 13,2 14,2 15,2 16,2 17,2 18,2 19,2 2,2 20,2 21,2 22,2 23,2 3,2 4,2 5,2 6,2 7,2 8,2 9,20 1,20 10,20 11,20 12,20 13,20 14,20 15,20 16,20 17,20 18,20 19,20 2,20 20,20 21,20 22,20 23,20 3,20 4,20 5,20 6,20 7,20 8,20 9,21 1,21 10,21 11,21 12,21 13,21 14,21 15,21 16,21 17,21 18,21 19,21 2,21 20,21 21,21 22,21 23,21 3,21 4,21 5,21 6,21 7,21 8,21 9,22 1,22 10,22 11,22 12,22 13,22 14,22 15,22 16,22 17,22 18,22 19,22 2,22 20,22 21,22 22,22 23,22 3,22 4,22 5,22 6,22 7,22 8,22 9,23 1,23 10,23 11,23 12,23 13,23 14,23 15,23 16,23 17,23 18,23 19,23 2,23 20,23 21,23 22,23 23,23 3,23 4,23 5,23 6,23 7,23 8,23 9,3 1,3 10,3 11,3 12,3 13,3 14,3 15,3 16,3 17,3 18,3 19,3 2,3 20,3 21,3 22,3 23,3 3,3 4,3 5,3 6,3 7,3 8,3 9,4 1,4 10,4 11,4 12,4 13,4 14,4 15,4 16,4 17,4 18,4 19,4 2,4 20,4 21,4 22,4 23,4 3,4 4,4 5,4 6,4 7,4 8,4 9,5 1,5 10,5 11,5 12,5 13,5 14,5 15,5 16,5 17,5 18,5 19,5 2,5 20,5 21,5 22,5 23,5 3,5 4,5 5,5 6,5 7,5 8,5 9,6 1,6 10,6 11,6 12,6 13,6 14,6 15,6 16,6 17,6 18,6 19,6 2,6 20,6 21,6 22,6 23,6 3,6 4,6 5,6 6,6 7,6 8,6 9,7 1,7 10,7 11,7 12,7 13,7 14,7 15,7 16,7 17,7 18,7 19,7 2,7 20,7 21,7 22,7 23,7 3,7 4,7 5,7 6,7 7,7 8,7 9,8 1,8 10,8 11,8 12,8 13,8 14,8 15,8 16,8 17,8 18,8 19,8 2,8 20,8 21,8 22,8 23,8 3,8 4,8 5,8 6,8 7,8 8,8 9,9 1,9 10,9 11,9 12,9 13,9 14,9 15,9 16,9 17,9 18,9 19,9 2,9 20,9 21,9 22,9 23,9 3,9 4,9 5,9 6,9 7,9 8,9 9
5000
227 - Single tuple - should be same as just select s
stmt s1;
Select <s1>
1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,3,4,5,6,7,8,9
5000
228 - Mix statement type in tuple
read re; print pn; call cl;
Select <re, pn, cl>
4 6 13,4 6 18,4 6 2,4 6 3,4 7 13,4 7 18,4 7 2,4 7 3,4 8 13,4 8 18,4 8 2,4 8 3,4 9 13,4 9 18,4 9 2,4 9 3,5 6 13,5 6 18,5 6 2,5 6 3,5 7 13,5 7 18,5 7 2,5 7 3,5 8 13,5 8 18,5 8 2,5 8 3,5 9 13,5 9 18,5 9 2,5 9 3
5000
229 - Mix statement type with linked logic
procedure p; read re; print pn; call cl;
Select <re, pn, cl, p> such that Uses(p, "cenX") such that Uses(pn, "flag")
4 6 13 computeCentroid,4 6 13 main,4 6 13 printResults,4 6 18 computeCentroid,4 6 18 main,4 6 18 printResults,4 6 2 computeCentroid,4 6 2 main,4 6 2 printResults,4 6 3 computeCentroid,4 6 3 main,4 6 3 printResults,5 6 13 computeCentroid,5 6 13 main,5 6 13 printResults,5 6 18 computeCentroid,5 6 18 main,5 6 18 printResults,5 6 2 computeCentroid,5 6 2 main,5 6 2 printResults,5 6 3 computeCentroid,5 6 3 main,5 6 3 printResults
5000
230 - Select duplicate statement in tuple
stmt s;
Select <s, s, s>
1 1 1, 2 2 2, 3 3 3, 4 4 4, 5 5 5, 6 6 6, 7 7 7, 8 8 8, 9 9 9, 10 10 10, 11 11 11, 12 12 12, 13 13 13, 14 14 14, 15 15 15, 16 16 16, 17 17 17, 18 18 18, 19 19 19, 20 20 20, 21 21 21, 22 22 22, 23 23 23
5000
230 - Select attribute names in tuple
read re; print pn; call cl;
Select <re.varName, pn.varName, cl.procName>
x flag computeCentroid, x cenX computeCentroid, x cenY computeCentroid, x normSq computeCentroid, y flag computeCentroid, y cenX computeCentroid, y cenY computeCentroid, y normSq computeCentroid, x flag printResults, x cenX printResults, x cenY printResults, x normSq printResults, y flag printResults, y cenX printResults, y cenY printResults, y normSq printResults, x flag readPoint, x cenX readPoint, x cenY readPoint, x normSq readPoint, y flag readPoint, y cenX readPoint, y cenY readPoint, y normSq readPoint
5000
231 - Select more attribute names in tuple
constant c;
Select <c.value>
0, 1
5000
232 - Tuple with attr_ref and variable itself
call cl;
Select <cl.procName, cl>
computeCentroid 2, printResults 3, readPoint 13, readPoint 18
5000
232 - Attr_ref not in tuple
variable v;
Select v.varName
cenX, cenY, count, flag, normSq, x, y
5000
233 - Read x2 in tuple
read re;
Select <re.varName, re.varName>
x x, y y
5000
234 - Print x2 in tuple mix with read re
read re; print pn;
Select <pn.varName, re.varName, pn.varName>
cenX x cenX, cenX y cenX, cenY x cenY, cenY y cenY, flag x flag, flag y flag, normSq x normSq, normSq y normSq
5000
235 - Stmt num
stmt s;
Select stmt.stmt#

5000
236 - mix stmt num
read re; print pn; call cl;
Select <re.stmt#, pn.stmt#, cl.stmt#>
4 6 13,4 6 18,4 6 2,4 6 3,4 7 13,4 7 18,4 7 2,4 7 3,4 8 13,4 8 18,4 8 2,4 8 3,4 9 13,4 9 18,4 9 2,4 9 3,5 6 13,5 6 18,5 6 2,5 6 3,5 7 13,5 7 18,5 7 2,5 7 3,5 8 13,5 8 18,5 8 2,5 8 3,5 9 13,5 9 18,5 9 2,5 9 3
5000
237 - mix stmt num 2
if ifs; assign a;
Select <ifs.stmt#, a.stmt#>
19 1, 19 10, 19 11, 19 12, 19 15, 19 16, 19 17, 19 20, 19 21, 19 22, 19 23
5000
238 - Select attribute names in tuple
read re; print pn; call cl;
Select <re.varName, pn.varName, cl.procName>
x flag computeCentroid, x cenX computeCentroid, x cenY computeCentroid, x normSq computeCentroid, y flag computeCentroid, y cenX computeCentroid, y cenY computeCentroid, y normSq computeCentroid, x flag printResults, x cenX printResults, x cenY printResults, x normSq printResults, y flag printResults, y cenX printResults, y cenY printResults, y normSq printResults, x flag readPoint, x cenX readPoint, x cenY readPoint, x normSq readPoint, y flag readPoint, y cenX readPoint, y cenY readPoint, y normSq readPoint
5000
239 - Select wrong procName attribute - invalid attrRef
stmt s;
Select s.procName

5000
240 - Select wrong varName attribute type - invalid attrRef
assign a;
Select a.varName

5000
241 - Select wrong value attribute type - invalid attrRef
procedure p;
Select p.value

5000
242 - Select wrong stmt attribute type - invalid attrRef
constant c;
Select c.stmt#

5000
243 - proc wrong attr ref Semantically invalid
procedure p;
Select p.varName

5000
244 - proc wrong attr ref Semantically invalid
procedure p;
Select p.value

5000
245 - proc wrong attr ref Semantically invalid
procedure p;
Select p.stmt#

5000
246 - call wrong attr ref Semantically invalid
call cl;
Select cl.varName

5000
247 - call wrong attr ref Semantically invalid
call cl;
Select cl.value

5000
248 - variable wrong attr ref Semantically invalid
variable v;
Select v.procName

5000
249 - variable wrong attr ref Semantically invalid
variable v;
Select v.value

5000
250 - variable wrong attr ref Semantically invalid
variable v;
Select v.stmt#

5000
251 - read wrong attr ref Semantically invalid
read re;
Select re.procName

5000
252 - read wrong attr ref Semantically invalid
read re;
Select re.value

5000
253 - print wrong attr ref Semantically invalid
print pn;
Select pn.procName

5000
254 - print wrong attr ref Semantically invalid
print pn;
Select pn.value

5000
255 - constant wrong attr ref Semantically invalid
constant c;
Select c.procName

5000
256 - constant wrong attr ref Semantically invalid
constant c;
Select c.varName

5000
257 - stmt wrong attr ref Semantically invalid
stmt s;
Select s.procName

5000
258 - stmt wrong attr ref Semantically invalid
stmt s;
Select s.varName

5000
259 - stmt wrong attr ref Semantically invalid
stmt s;
Select s.value

5000
260 - assign wrong attr ref Semantically invalid
assign a;
Select a.procName

5000
261 - assign wrong attr ref Semantically invalid
assign a;
Select a.varName

5000
262 - assign wrong attr ref Semantically invalid
assign a;
Select a.value

5000
263 - while wrong attr ref Semantically invalid
while w;
Select w.procName

5000
264 - while wrong attr ref Semantically invalid
while w;
Select w.varName

5000
265 - while wrong attr ref Semantically invalid
while w;
Select w.value

5000
266 - if wrong attr ref Semantically invalid
if ifs;
Select ifs.procName

5000
267 - if wrong attr ref Semantically invalid
if ifs;
Select ifs.varName

5000
268 - if wrong attr ref Semantically invalid
if ifs;
Select ifs.value

5000