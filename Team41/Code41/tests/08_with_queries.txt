1 - entity test
procedure p;
Select p
if, while, procedure, procedur3
5000
2 - entity test
read re;
Select re.varName
a, x, helloWorld, procedur3
5000
3 - entity test
print pn;
Select pn.varName
true, false, y, helloWorld, procedur3
5000
4 - entity test
variable v;
Select v
a, c, x, y, if, ifs, procedure, procedur3, while, else, then, false, print, mx, helloWorld, read, test, what, true
5000
5 - entity test
call c;
Select c.procName
if, while, procedur3
5000
6 - equal test

Select BOOLEAN with 1 = 1
TRUE
5000
7 - not equal test
stmt s;
Select s with 1 = 2

5000
8 - num - stmt.stmt#
stmt s;
Select s with 4 = s.stmt#
4
5000
8 - num - read.stmt#
read re, re1;
Select <re, re1> with 31 = re.stmt#
31 2, 31 11, 31 15, 31 18, 31 31
5000
9 - num - print.stmt#
print pn;
Select pn with 26 = pn.stmt#
26
5000
10 - num - call.stmt#
call cl;
Select <cl, cl.stmt#> with 28 = cl.stmt#
28 28
5000
11 - num - while.stmt#
while w;
Select w with 13 = w.stmt#
13
5000
12 - num - if.stmt#
if ifs;
Select ifs with 22 = ifs.stmt#
22
5000
13 - num - assign.stmt#
assign a, a1;
Select a1 with 5 = a.stmt#
1, 5, 6, 7, 8, 12, 17, 24, 25
5000
14 - num - constant.value
constant c;
Select c with 412341235 = c.value
412341235
5000
15 - identifier - identifier

Select BOOLEAN with "WITH" = "WITH"
TRUE
5000
16 - identifier - identifier

Select BOOLEAN with "CS3203" = "PASS"
FALSE
5000
17 - identifier - proc procName
procedure p;
Select p with "procedure" = p.procName
procedure
5000
18 - identifier - call procName
call cl;
Select cl with "if" = cl.procName
4
5000
19 - identifier - variable varName
variable v;
Select v with "while" = v.varName
while
5000
20 - identifier - read varName
read re;
Select re with "a" = re.varName
11, 18
5000
21 - identifier - print varName
print pn;
Select pn with "procedur3" = pn.varName
3, 14
5000
22 - stmt.stmt# - num
stmt s;
Select s with s.stmt# = 4
4
5000
23 - read.stmt# - num
read re, re1;
Select <re, re1> with re.stmt# = 31
31 2, 31 11, 31 15, 31 18, 31 31
5000
24 - print.stmt# - num
print pn;
Select pn with pn.stmt# = 26
26
5000
25 - call.stmt# - num
call cl;
Select <cl, cl.stmt#> with cl.stmt# = 28
28 28
5000
26 - while.stmt# - num
while w;
Select w with w.stmt# = 13
13
5000
27 - if.stmt# - num
if ifs;
Select ifs with ifs.stmt# = 22
22
5000
28 - assign.stmt# - num
assign a, a1;
Select a1 with a.stmt# = 5
1, 5, 6, 7, 8, 12, 17, 24, 25
5000
29 - constant.value - num
constant c;
Select c with c.value = 412341235
412341235
5000
30 - proc procName - identifier
procedure p;
Select p with p.procName = "procedure"
procedure
5000
31 - call procName - identifier
call cl;
Select cl with cl.procName = "if"
4
5000
32 - variable varName - identifier
variable v;
Select v with v.varName = "while"
while
5000
33 - read varName - identifier
read re;
Select re with re.varName = "a"
11, 18
5000
34 - print varName - identifier
print pn;
Select pn with pn.varName = "procedur3"
3, 14
5000
35 - proc procName - proc procName
procedure p, p2;
Select <p, p2.procName> with p.procName = p2.procName
if if, procedur3 procedur3, procedure procedure, while while
5000
36 - proc procName - call procName
procedure p; call cl;
Select <p, cl.procName> with p.procName = cl.procName
if if, procedur3 procedur3, while while
5000
37 - proc procName - var varName
procedure p; variable v;
Select <p.procName, v.varName> with p.procName = v.varName
if if, procedur3 procedur3, procedure procedure, while while
5000
38 - proc procName - read varName
procedure p; read re;
Select <p, re.varName> with p.procName = re.varName
procedur3 procedur3
5000
39 - proc procName - print varName
procedure p; print pn;
Select <p, pn.varName> with p.procName = pn.varName
procedur3 procedur3
5000
40 - call procName - proc procName
call cl; procedure p;
Select <cl.procName, p> with cl.procName = p.procName
if if, procedur3 procedur3, while while
5000
41 - call procName - call procName
call cl, cl2;
Select <cl.procName, cl2.procName> with cl.procName = cl2.procName
if if, procedur3 procedur3, while while
5000
42 - call procName - var varName
call cl; variable v;
Select <cl.procName, v.varName> with cl.procName = v.varName
if if, procedur3 procedur3, while while
5000
43 - call procName - read varName
call cl; read re;
Select <cl.procName, re.varName> with cl.procName = re.varName
procedur3 procedur3
5000
44 - call procName - print varName
call cl; print pn;
Select <cl.procName, pn.varName> with cl.procName = pn.varName
procedur3 procedur3
5000
45 - var varName - proc procName
variable v; procedure p;
Select <v.varName, p.procName> with v.varName = p.procName
if if, procedur3 procedur3, procedure procedure, while while
5000
46 - var varName - call procName
variable v; call cl;
Select <v.varName, cl.procName> with v.varName = cl.procName
if if, procedur3 procedur3, while while
5000
47 - var varName - var varName
variable v, v2;
Select <v, v2.varName> with v.varName = v2.varName
a a, c c, else else, false false, helloWorld helloWorld, if if, ifs ifs, mx mx, print print, procedur3 procedur3, procedure procedure, read read, test test, then then, true true, what what, while while, x x, y y
5000
48 - var varName - read varName
variable v; read re;
Select <v.varName, re.varName> with v.varName = re.varName
a a, helloWorld helloWorld, procedur3 procedur3, x x
5000
49 - var varName - print varName
variable v; print pn;
Select <v.varName, pn.varName> with v.varName = pn.varName
y y, true true, false false, procedur3 procedur3, helloWorld helloWorld
5000
50 - read varName - proc procName
read re; procedure p;
Select <re.varName, p.procName> with re.varName = p.procName
procedur3 procedur3
5000
51 - read varName - call procName
read re; call cl;
Select <re.varName, cl.procName> with re.varName = cl.procName
procedur3 procedur3
5000
52 - read varName - var varName
read re; variable v;
Select <re.varName, v.varName> with re.varName = v.varName
a a, x x, procedur3 procedur3, helloWorld helloWorld
5000
53 - read varName - read varName
read re, re2;
Select <re, re2.varName> with re.varName = re2.varName
11 a, 15 x, 18 a, 2 procedur3, 31 helloWorld
5000
54 - read varName - print varName
read re; print pn;
Select <re.varName, pn.varName> with re.varName = pn.varName
procedur3 procedur3, helloWorld helloWorld
5000
55 - print varName - proc procName
print pn; procedure p;
Select <pn.varName, p.procName> with pn.varName = p.procName
procedur3 procedur3
5000
56 - print varName - call procName
print pn; call cl;
Select <pn.varName, cl.procName> with pn.procName = cl.procName

5000
57 - print varName - var varName
print pn; variable v;
Select <pn.varName, v.varName> with pn.varName = v.varName
y y, true true, false false, procedur3 procedur3, helloWorld helloWorld
5000
58 - print varName - read varName
print pn; read re;
Select <pn.varName, re.varName> with pn.varName = re.varName
procedur3 procedur3, helloWorld helloWorld
5000
59 - print varName - print varName
print pn, pn2;
Select <pn, pn2.varName> with pn.varName = pn2.varName
14 procedur3, 16 y, 23 true, 26 false, 3 procedur3, 30 helloWorld
5000
60 - stmt - stmt
stmt s, s2;
Select s.stmt# with s.stmt# = s2.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
61 - stmt - read
stmt s; read re;
Select s.stmt# with s.stmt# = re.stmt#
2, 11, 15, 18, 31
5000
62 - stmt - print
stmt s; print pn;
Select s.stmt# with s.stmt# = pn.stmt#
3, 14, 16, 23, 26, 30
5000
63 - stmt - call
stmt s; call cl;
Select s.stmt# with s.stmt# = cl.stmt#
4, 19, 20, 27, 28, 29
5000
64 - stmt - while
stmt s; while w;
Select s.stmt# with s.stmt# = w.stmt#
9, 13, 21
5000
65 - stmt - if
stmt s; if ifs;
Select s.stmt# with s.stmt# = ifs.stmt#
10, 22
5000
66 - stmt - assign
stmt s; assign a;
Select s.stmt# with s.stmt# = a.stmt#
1, 5, 6, 7, 8, 12, 17, 24, 25
5000
67 - stmt - constant
stmt s; constant c;
Select s.stmt# with s.stmt# = c.value
1, 3, 4, 9, 10, 15
5000
68 - read - stmt
read re; stmt s;
Select re.stmt# with re.stmt# = s.stmt#
2, 11, 15, 18, 31
5000
69 - read - read
read re, re2;
Select re.stmt# with re.stmt# = re2.stmt#
2, 11, 15, 18, 31
5000
70 - read - print
read re; print pn;
Select re.stmt# with re.stmt# = pn.stmt#

5000
71 - read - call
read re; call cl;
Select re.stmt# with re.stmt# = cl.stmt#

5000
72 - read - while
read re; while w;
Select re.stmt# with re.stmt# = w.stmt#

5000
73 - read - if
read re; if ifs;
Select re.stmt# with re.stmt# = ifs.stmt#

5000
74 - read - assign
read re; assign a;
Select re.stmt# with re.stmt# = a.stmt#

5000
75 - read - constant
read re; constant c;
Select re.stmt# with re.stmt# = c.value
15
5000
76 - print - stmt
print pn; stmt s;
Select pn.stmt# with pn.stmt# = s.stmt#
3, 14, 16, 23, 26, 30
5000
77 - print - read
print pn; read re;
Select pn.stmt# with pn.stmt# = re.stmt#

5000
78 - print - print
print pn, pn2;
Select pn.stmt# with pn.stmt# = pn2.stmt#
3, 14, 16, 23, 26, 30
5000
79 - print - call
print pn; call cl;
Select pn.stmt# with pn.stmt# = cl.stmt#

5000
80 - print - while
print pn; while w;
Select pn.stmt# with pn.stmt# = w.stmt#

5000
81 - print - if
print pn; if ifs;
Select pn.stmt# with pn.stmt# = ifs.stmt#

5000
82 - print - assign
print pn; assign a;
Select pn.stmt# with pn.stmt# = a.stmt#

5000
83 - print - constant
print pn; constant c;
Select pn.stmt# with pn.stmt# = c.value
3
5000
84 - call - stmt
call cl; stmt s;
Select cl.stmt# with cl.stmt# = s.stmt#
4, 19, 20, 27, 28, 29
5000
85 - call - read
call cl; read re;
Select cl.stmt# with cl.stmt# = re.stmt#

5000
86 - call - print
call cl; print pn;
Select cl.stmt# with cl.stmt# = pn.stmt#

5000
87 - call - call
call cl, cl2;
Select cl.stmt# with cl.stmt# = cl2.stmt#
4, 19, 20, 27, 28, 29
5000
88 - call - while
call cl; while w;
Select cl.stmt# with cl.stmt# = w.stmt#

5000
89 - call - if
call cl; if ifs;
Select cl.stmt# with cl.stmt# = ifs.stmt#

5000
90 - call - assign
call cl; assign a;
Select cl.stmt# with cl.stmt# = a.stmt#

5000
91 - call - constant
call cl; constant c;
Select cl.stmt# with cl.stmt# = c.value
4
5000
92 - while - stmt
while w; stmt s;
Select w.stmt# with w.stmt# = s.stmt#
9, 13, 21
5000
93 - while - read
while w; read re;
Select w.stmt# with w.stmt# = re.stmt#

5000
94 - while - print
while w; print pn;
Select w.stmt# with w.stmt# = pn.stmt#

5000
95 - while - call
while w; call cl;
Select w.stmt# with w.stmt# = cl.stmt#

5000
96 - while - while
while w, w2;
Select w.stmt# with w.stmt# = w2.stmt#
9, 13, 21
5000
97 - while - if
while w; if ifs;
Select w.stmt# with w.stmt# = ifs.stmt#

5000
98 - while - assign
while w; assign a;
Select w.stmt# with w.stmt# = a.stmt#

5000
99 - while - constant
while w; constant c;
Select w.stmt# with w.stmt# = c.value
9
5000
100 - if - stmt
if ifs; stmt s;
Select ifs.stmt# with ifs.stmt# = s.stmt#
10, 22
5000
101 - if - read
if ifs; read re;
Select ifs.stmt# with ifs.stmt# = re.stmt#

5000
102 - if - print
if ifs; print pn;
Select ifs.stmt# with ifs.stmt# = pn.stmt#

5000
103 - if - call
if ifs; call cl;
Select ifs.stmt# with ifs.stmt# = cl.stmt#

5000
104 - if - while
if ifs; while w;
Select ifs.stmt# with ifs.stmt# = w.stmt#

5000
105 - if - if
if ifs, ifs2;
Select ifs.stmt# with ifs.stmt# = ifs2.stmt#
10, 22
5000
106 - if - assign
if ifs; assign a;
Select ifs.stmt# with ifs.stmt# = a.stmt#

5000
107 - if - constant
if ifs; constant c;
Select ifs.stmt# with ifs.stmt# = c.value
10
5000
108 - assign - stmt
assign a; stmt s;
Select a.stmt# with a.stmt# = s.stmt#
1, 5, 6, 7, 8, 12, 17, 24, 25
5000
109 - assign - read
assign a; read re;
Select a.stmt# with a.stmt# = re.stmt#

5000
110 - assign - print
assign a; print pn;
Select a.stmt# with a.stmt# = pn.stmt#

5000
111 - assign - call
assign a; call cl;
Select a.stmt# with a.stmt# = cl.stmt#

5000
112 - assign - while
assign a; while w;
Select a.stmt# with a.stmt# = w.stmt#

5000
113 - assign - if
assign a; if ifs;
Select a.stmt# with a.stmt# = ifs.stmt#

5000
114 - assign - assign
assign a, a2;
Select a.stmt# with a.stmt# = a2.stmt#
1, 5, 6, 7, 8, 12, 17, 24, 25
5000
115 - assign - constant
assign a; constant c;
Select a.stmt# with a.stmt# = c.value
1
5000
116 - constant - stmt
constant c; stmt s;
Select c.value with c.value = s.stmt#
1, 3, 4, 9, 10, 15
5000
117 - constant - read
constant c; read re;
Select c.value with c.value = re.stmt#
15
5000
118 - constant - print
constant c; print pn;
Select c.value with c.value = pn.stmt#
3
5000
119 - constant - call
constant c; call cl;
Select c.value with c.value = cl.stmt#
4
5000
120 - constant - while
constant c; while w;
Select c.value with c.value = w.stmt#
9
5000
121 - constant - if
constant c; if ifs;
Select c.value with c.value = ifs.stmt#
10
5000
122 - constant - assign
constant c; assign a;
Select c.value with c.value = a.stmt#
1
5000
123 - constant - constant
constant c, c2;
Select c.value with c.value = c2.value
1, 3, 4, 9, 10, 15, 2304, 12342, 412341235
5000
124 - num - proc procName Semantically invalid
procedure p;
Select BOOLEAN with 1 = p.procName
FALSE
5000
125 - num - call procName Semantically invalid
call cl;
Select BOOLEAN with 1 = cl.procName
FALSE
5000
126 - num - variable procName Semantically invalid
variable v;
Select BOOLEAN with 1 = v.varName
FALSE
5000
127 - num - read procName Semantically invalid
read re;
Select BOOLEAN with 1 = re.procName
FALSE
5000
128 - num - print procName Semantically invalid
print pn;
Select BOOLEAN with 1 = pn.procName
FALSE
5000
129 - proc procName - num Semantically invalid
procedure p;
Select BOOLEAN with p.procName = 1
FALSE
5000
130 - call procName - num Semantically invalid
call cl;
Select BOOLEAN with cl.procName = 1
FALSE
5000
131 - variable procName - num Semantically invalid
variable v;
Select BOOLEAN with v.varName = 1
FALSE
5000
132 - read procName - num Semantically invalid
read re;
Select BOOLEAN with re.procName = 1
FALSE
5000
133 - print procName - num Semantically invalid
print pn;
Select BOOLEAN with pn.procName = 1
FALSE
5000
134 - num - identifier Syntactically invalid

Select BOOLEAN with 1 = "1"

5000
135 - identifier - num Syntactically invalid

Select BOOLEAN with "1" = 1

5000
136 - proc wrong attr ref Semantically invalid
procedure p;
Select BOOLEAN with p.varName = "v1"
FALSE
5000
137 - proc wrong attr ref Semantically invalid
procedure p;
Select BOOLEAN with p.value = 1
FALSE
5000
138 - proc wrong attr ref Semantically invalid
procedure p;
Select BOOLEAN with p.stmt# = 1
FALSE
5000
139 - call wrong attr ref Semantically invalid
call cl;
Select BOOLEAN with cl.varName = "v1"
FALSE
5000
140 - call wrong attr ref Semantically invalid
call cl;
Select BOOLEAN with cl.value = 1
FALSE
5000
141 - variable wrong attr ref Semantically invalid
variable v;
Select BOOLEAN with v.procName = "v1"
FALSE
5000
142 - variable wrong attr ref Semantically invalid
variable v;
Select BOOLEAN with v.value = 1
FALSE
5000
143 - variable wrong attr ref Semantically invalid
variable v;
Select BOOLEAN with v.stmt# = 1
FALSE
5000
144 - read wrong attr ref Semantically invalid
read re;
Select BOOLEAN with re.procName = "v1"
FALSE
5000
145 - read wrong attr ref Semantically invalid
read re;
Select BOOLEAN with re.value = 1
FALSE
5000
146 - print wrong attr ref Semantically invalid
print pn;
Select BOOLEAN with pn.procName = "v1"
FALSE
5000
147 - print wrong attr ref Semantically invalid
print pn;
Select BOOLEAN with pn.value = 1
FALSE
5000
148 - constant wrong attr ref Semantically invalid
constant c;
Select BOOLEAN with c.procName = "c"
FALSE
5000
149 - constant wrong attr ref Semantically invalid
constant c;
Select BOOLEAN with c.varName = "c"
FALSE
5000
150 - stmt wrong attr ref Semantically invalid
stmt s;
Select BOOLEAN with s.value = 1
FALSE
5000
151 - stmt wrong attr ref Semantically invalid
stmt s;
Select BOOLEAN with s.procName = "v1"
FALSE
5000
152 - stmt wrong attr ref Semantically invalid
stmt s;
Select BOOLEAN with s.varName = "v1"
FALSE
5000
153 - assign wrong attr ref Semantically invalid
assign a;
Select BOOLEAN with a.value = 1
FALSE
5000
154 - assign wrong attr ref Semantically invalid
assign a;
Select BOOLEAN with a.procName = "v1"
FALSE
5000
155 - assign wrong attr ref Semantically invalid
assign a;
Select BOOLEAN with a.varName = "v1"
FALSE
5000
156 - while wrong attr ref Semantically invalid
while w;
Select BOOLEAN with w.value = 1
FALSE
5000
157 - while wrong attr ref Semantically invalid
while w;
Select BOOLEAN with w.procName = "v1"
FALSE
5000
158 - while wrong attr ref Semantically invalid
while w;
Select BOOLEAN with w.varName = "v1"
FALSE
5000
159 - if wrong attr ref Semantically invalid
if ifs;
Select BOOLEAN with ifs.value = 1
FALSE
5000
160 - if wrong attr ref Semantically invalid
if ifs;
Select BOOLEAN with ifs.procName = "v1"
FALSE
5000
161 - if wrong attr ref Semantically invalid
if ifs;
Select BOOLEAN with ifs.varName = "v1"
FALSE
5000
162 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; stmt s;
Select BOOLEAN with p.procName = s.stmt#
FALSE
5000
163 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; read re;
Select BOOLEAN with p.procName = re.stmt#
FALSE
5000
164 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; print pn;
Select BOOLEAN with p.procName = pn.stmt#
FALSE
5000
165 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; call cl;
Select BOOLEAN with p.procName = cl.stmt#
FALSE
5000
166 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; while w;
Select BOOLEAN with p.procName = w.stmt#
FALSE
5000
167 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; if ifs;
Select BOOLEAN with p.procName = ifs.stmt#
FALSE
5000
168 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; assign a;
Select BOOLEAN with p.procName = a.stmt#
FALSE
5000
169 - attr ref type string - attr ref type int mismatch Semantically invalid
procedure p; constant c;
Select BOOLEAN with p.procName = c.value
FALSE
5000
170 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; stmt s;
Select BOOLEAN with cl.procName = s.stmt#
FALSE
5000
171 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; read re;
Select BOOLEAN with cl.procName = re.stmt#
FALSE
5000
172 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; print pn;
Select BOOLEAN with cl.procName = pn.stmt#
FALSE
5000
173 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl, cl2;
Select BOOLEAN with cl.procName = cl2.stmt#
FALSE
5000
174 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; while w;
Select BOOLEAN with cl.procName = w.stmt#
FALSE
5000
175 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; if ifs;
Select BOOLEAN with cl.procName = ifs.stmt#
FALSE
5000
176 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; assign a;
Select BOOLEAN with cl.procName = a.stmt#
FALSE
5000
177 - attr ref type string - attr ref type int mismatch Semantically invalid
call cl; constant c;
Select BOOLEAN with cl.procName = c.value
FALSE
5000
178 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; stmt s;
Select BOOLEAN with v.varName = s.stmt#
FALSE
5000
179 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; read re;
Select BOOLEAN with v.varName = re.stmt#
FALSE
5000
180 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; print pn;
Select BOOLEAN with v.varName = pn.stmt#
FALSE
5000
181 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; call cl;
Select BOOLEAN with v.varName = cl.stmt#
FALSE
5000
182 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; while w;
Select BOOLEAN with v.varName = w.stmt#
FALSE
5000
183 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; if ifs;
Select BOOLEAN with v.varName = ifs.stmt#
FALSE
5000
184 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; assign a;
Select BOOLEAN with v.varName = a.stmt#
FALSE
5000
185 - attr ref type string - attr ref type int mismatch Semantically invalid
variable v; constant c;
Select BOOLEAN with v.varName = c.value
FALSE
5000
186 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; stmt s;
Select BOOLEAN with re.varName = s.stmt#
FALSE
5000
187 - attr ref type string - attr ref type int mismatch Semantically invalid
read re, re2;
Select BOOLEAN with re.varName = re2.stmt#
FALSE
5000
188 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; print pn;
Select BOOLEAN with re.varName = pn.stmt#
FALSE
5000
189 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; call cl;
Select BOOLEAN with re.varName = cl.stmt#
FALSE
5000
190 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; while w;
Select BOOLEAN with re.varName = w.stmt#
FALSE
5000
191 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; if ifs;
Select BOOLEAN with re.varName = ifs.stmt#
FALSE
5000
192 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; assign a;
Select BOOLEAN with re.varName = a.stmt#
FALSE
5000
193 - attr ref type string - attr ref type int mismatch Semantically invalid
read re; constant c;
Select BOOLEAN with re.varName = c.value
FALSE
5000
194 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; stmt s;
Select BOOLEAN with pn.varName = s.stmt#
FALSE
5000
195 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; read re;
Select BOOLEAN with pn.varName = re.stmt#
FALSE
5000
196 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn, pn2;
Select BOOLEAN with pn.varName = pn2.stmt#
FALSE
5000
197 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; call cl;
Select BOOLEAN with pn.varName = cl.stmt#
FALSE
5000
198 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; while w;
Select BOOLEAN with pn.varName = w.stmt#
FALSE
5000
199 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; if ifs;
Select BOOLEAN with pn.varName = ifs.stmt#
FALSE
5000
200 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; assign a;
Select BOOLEAN with pn.varName = a.stmt#
FALSE
5000
201 - attr ref type string - attr ref type int mismatch Semantically invalid
print pn; constant c;
Select BOOLEAN with pn.varName = c.value
FALSE
5000
202 - attr ref type int - attr ref type string mismatch Semantically invalid
stmt s; procedure p;
Select BOOLEAN with s.stmt# = p.procName
FALSE
5000
203 - attr ref type int - attr ref type string mismatch Semantically invalid
stmt s; call cl;
Select BOOLEAN with s.stmt# = cl.procName
FALSE
5000
204 - attr ref type int - attr ref type string mismatch Semantically invalid
stmt s; variable v;
Select BOOLEAN with s.stmt# = v.varName
FALSE
5000
205 - attr ref type int - attr ref type string mismatch Semantically invalid
stmt s; read re;
Select BOOLEAN with s.stmt# = re.varName
FALSE
5000
206 - attr ref type int - attr ref type string mismatch Semantically invalid
stmt s; print pn;
Select BOOLEAN with s.stmt# = pn.varName
FALSE
5000
207 - attr ref type int - attr ref type string mismatch Semantically invalid
read re; procedure p;
Select BOOLEAN with re.stmt# = p.procName
FALSE
5000
208 - attr ref type int - attr ref type string mismatch Semantically invalid
read re; call cl;
Select BOOLEAN with re.stmt# = cl.procName
FALSE
5000
209 - attr ref type int - attr ref type string mismatch Semantically invalid
read re; variable v;
Select BOOLEAN with re.stmt# = v.varName
FALSE
5000
210 - attr ref type int - attr ref type string mismatch Semantically invalid
read re, re2;
Select BOOLEAN with re.stmt# = re2.varName
FALSE
5000
211 - attr ref type int - attr ref type string mismatch Semantically invalid
read re; print pn;
Select BOOLEAN with re.stmt# = pn.varName
FALSE
5000
212 - attr ref type int - attr ref type string mismatch Semantically invalid
call cl; procedure p;
Select BOOLEAN with cl.stmt# = p.procName
FALSE
5000
213 - attr ref type int - attr ref type string mismatch Semantically invalid
call cl, cl2;
Select BOOLEAN with cl.stmt# = cl2.procName
FALSE
5000
214 - attr ref type int - attr ref type string mismatch Semantically invalid
call cl; variable v;
Select BOOLEAN with cl.stmt# = v.varName
FALSE
5000
215 - attr ref type int - attr ref type string mismatch Semantically invalid
call cl; read re;
Select BOOLEAN with cl.stmt# = re.varName
FALSE
5000
216 - attr ref type int - attr ref type string mismatch Semantically invalid
call cl; print pn;
Select BOOLEAN with cl.stmt# = pn.varName
FALSE
5000
217 - attr ref type int - attr ref type string mismatch Semantically invalid
while w; procedure p;
Select BOOLEAN with w.stmt# = p.procName
FALSE
5000
218 - attr ref type int - attr ref type string mismatch Semantically invalid
while w; call cl;
Select BOOLEAN with w.stmt# = cl.procName
FALSE
5000
219 - attr ref type int - attr ref type string mismatch Semantically invalid
while w; variable v;
Select BOOLEAN with w.stmt# = v.varName
FALSE
5000
220 - attr ref type int - attr ref type string mismatch Semantically invalid
while w; read re;
Select BOOLEAN with w.stmt# = re.varName
FALSE
5000
221 - attr ref type int - attr ref type string mismatch Semantically invalid
while w; print pn;
Select BOOLEAN with w.stmt# = pn.varName
FALSE
5000
222 - attr ref type int - attr ref type string mismatch Semantically invalid
if ifs; procedure p;
Select BOOLEAN with ifs.stmt# = p.procName
FALSE
5000
223 - attr ref type int - attr ref type string mismatch Semantically invalid
if ifs; call cl;
Select BOOLEAN with ifs.stmt# = cl.procName
FALSE
5000
224 - attr ref type int - attr ref type string mismatch Semantically invalid
if ifs; variable v;
Select BOOLEAN with ifs.stmt# = v.varName
FALSE
5000
225 - attr ref type int - attr ref type string mismatch Semantically invalid
if ifs; read re;
Select BOOLEAN with ifs.stmt# = re.varName
FALSE
5000
226 - attr ref type int - attr ref type string mismatch Semantically invalid
if ifs; print pn;
Select BOOLEAN with ifs.stmt# = pn.varName
FALSE
5000
227 - attr ref type int - attr ref type string mismatch Semantically invalid
assign a; procedure p;
Select BOOLEAN with a.stmt# = p.procName
FALSE
5000
228 - attr ref type int - attr ref type string mismatch Semantically invalid
assign a; call cl;
Select BOOLEAN with a.stmt# = cl.procName
FALSE
5000
229 - attr ref type int - attr ref type string mismatch Semantically invalid
assign a; variable v;
Select BOOLEAN with a.stmt# = v.varName
FALSE
5000
230 - attr ref type int - attr ref type string mismatch Semantically invalid
assign a; read re;
Select BOOLEAN with a.stmt# = re.varName
FALSE
5000
231 - attr ref type int - attr ref type string mismatch Semantically invalid
assign a; print pn;
Select BOOLEAN with a.stmt# = pn.varName
FALSE
5000
232 - attr ref type int - attr ref type string mismatch Semantically invalid
constant c; procedure p;
Select BOOLEAN with c.value = p.procName
FALSE
5000
233 - attr ref type int - attr ref type string mismatch Semantically invalid
constant c; call cl;
Select BOOLEAN with c.value = cl.procName
FALSE
5000
234 - attr ref type int - attr ref type string mismatch Semantically invalid
constant c; variable v;
Select BOOLEAN with c.value = v.varName
FALSE
5000
235 - attr ref type int - attr ref type string mismatch Semantically invalid
constant c; read re;
Select BOOLEAN with c.value = re.varName
FALSE
5000
236 - attr ref type int - attr ref type string mismatch Semantically invalid
constant c; print pn;
Select BOOLEAN with c.value = pn.varName
FALSE
5000
237 - attr ref type int - attr ref type string mismatch Semantically invalid
print pn; procedure p;
Select BOOLEAN with pn.stmt# = p.procName
FALSE
5000
238 - attr ref type int - attr ref type string mismatch Semantically invalid
print pn; call cl;
Select BOOLEAN with pn.stmt# = cl.procName
FALSE
5000
239 - attr ref type int - attr ref type string mismatch Semantically invalid
print pn; variable v;
Select BOOLEAN with pn.stmt# = v.varName
FALSE
5000
240 - attr ref type int - attr ref type string mismatch Semantically invalid
print pn; read re;
Select BOOLEAN with pn.stmt# = re.varName
FALSE
5000
241 - attr ref type int - attr ref type string mismatch Semantically invalid
print pn, pn2;
Select BOOLEAN with pn.stmt# = pn2.varName
FALSE
5000